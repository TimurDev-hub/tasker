@use "../_resources/mixins/display" as display;
@use "../_resources/mixins/font" as font;
@use "../_resources/mixins/media" as media;
@use "../_resources/mixins/size" as size;
@use "../_resources/tokens/variables" as var;
@use "../_resources/tokens/colors" as color;
@use "../_resources/utils/functions" as func;

.header {
	@include display.flexContainerBlock(row, nowrap, center, center);
	@include size.objectSizeExtended(100vw, 4, 'fixedWidth');
	background-color: color.$darkGrey;
	border-bottom: func.viewportSum(var.$borderSizeThin) solid color.$darkWhite;

	&__container {
		@include display.flexContainerBlock(row, nowrap, space-between, center);
		@include size.objectSize(80%, 100%);
		padding-inline: func.viewportSum(var.$containerPaddingNormal);
	}

	&__logo {
		@include font.fontConfigExtended('InterItalic', italic, var.$textSizeMedium, 600);
		color: color.$white;
	}

	&__menu {
		@include display.flexContainerInline(row, nowrap, center, center);
		height: 100%;

		&-item {
			margin-inline: func.viewportSum(.6);
		}

		&-link {
			@include font.fontConfigExtended('InterRegular', normal, var.$textSizeNormal, 500);
			display: inline-block;
			padding: func.viewportSum(.3) func.viewportSum(.9);
			background-color: color.$blue;
			border: func.viewportSum(var.$borderSizeNormal) solid transparent;
			border-radius: func.viewportSum(var.$borderRadiusNormal);
			color: color.$white;
			transition-property: color, border-color, background-color;
			transition-duration: var.$fastDuration, var.$fastDuration, var.$fastDuration;

			@include media.hoverEffect {
				color: color.$blue;
				border-color: color.$blue;
				background-color: color.$white;
			}

			&--yellow {
				color: color.$black;
				background-color: color.$yellow;

				@include media.hoverEffect {
					color: color.$yellow;
					border-color: color.$yellow;
					background-color: color.$black;
				}
			}
		}
	}
}